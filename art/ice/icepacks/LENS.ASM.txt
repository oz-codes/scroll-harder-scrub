15,01;============================================================================;
15,01; Lens effects are neat because they require almost no processor time. They  ;
15,01; do, however, require some forethought... designing the lens lookup to look ;
15,01; good and be fairly quick. There are many ways to do this, but I think this ;
15,01; is the fastest Mode 13h implementation possible. Who knows.                ;
15,01;============================================================================;
15,01        ;-------------------------------;
15,01dl_si   dw      0                       ;
15,01dl_offs dw      0                       ;
15,01        ;-------------------------------;
15,01        ; Do the lens. Watch close.     ;
15,01        ; BX = Y, CX = X.               ;
15,01        ; Be careful ripping this.      ;
15,01        ; Assumes a screen copy at      ;
15,01        ; DATA:0000 and all vars are    ;
15,01        ; codeseg.                      ;
15,01do_lens proc                            ;
15,01        push es                         ;
15,01        push ds                         ;
15,01        push bp                         ;
15,01        xor si,si                       ;
15,01        mov ax,[datseg]                 ;
15,01        mov ds,ax                       ;
15,01        mov ax,0a000h                   ;
15,01        mov es,ax                       ;
15,01        mov ax,cx                       ;
15,01        sal cx,8                        ;
15,01        sal ax,6                        ;
15,01        add ax,cx                       ;
15,01        add ax,bx                       ;
15,01        mov cs:[dl_offs],ax             ;
15,01        mov bx,offset lens              ;
15,01        mov dx,cs:[dl_offs]             ;
15,01        mov cs:[dl_si],si               ;
15,01        mov bp,51                       ;
15,01dl_01:  mov cx,50                       ;
15,01        mov di,cs:[dl_si]               ;
15,01        add di,dx                       ;
15,01dl_02:  mov si,word ptr cs:[bx]         ;
15,01        add si,di                       ;
15,01dl_02a: mov al,byte ptr ds:[si]         ;
15,01        mov byte ptr es:[di],al         ;
15,01dl_02b: add bx,2                        ;
15,01        inc di                          ;
15,01        dec cx                          ;
15,01        jnz dl_02                       ;
15,01        add dx,320                      ;
15,01        dec bp                          ;
15,01        jnz dl_01                       ;
15,01        pop bp                          ;
15,01        pop ds                          ;
15,01        pop es                          ;
15,01        ret                             ;
15,01do_lens endp                            ;
